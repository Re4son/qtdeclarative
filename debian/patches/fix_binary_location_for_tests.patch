Index: qtdeclarative-opensource-src-5.6.0-rc/tests/auto/qml/qmlmin/tst_qmlmin.cpp
===================================================================
--- qtdeclarative-opensource-src-5.6.0-rc.orig/tests/auto/qml/qmlmin/tst_qmlmin.cpp
+++ qtdeclarative-opensource-src-5.6.0-rc/tests/auto/qml/qmlmin/tst_qmlmin.cpp
@@ -67,7 +67,7 @@ tst_qmlmin::tst_qmlmin()
 
 void tst_qmlmin::initTestCase()
 {
-    qmlminPath = QLibraryInfo::location(QLibraryInfo::BinariesPath) + QLatin1String("/qmlmin");
+    qmlminPath = QLatin1String("../../../../bin") + QLatin1String("/qmlmin");
 #ifdef Q_OS_WIN
     qmlminPath += QLatin1String(".exe");
 #endif
Index: qtdeclarative-opensource-src-5.6.0-rc/tests/auto/qml/qmlplugindump/tst_qmlplugindump.cpp
===================================================================
--- qtdeclarative-opensource-src-5.6.0-rc.orig/tests/auto/qml/qmlplugindump/tst_qmlplugindump.cpp
+++ qtdeclarative-opensource-src-5.6.0-rc/tests/auto/qml/qmlplugindump/tst_qmlplugindump.cpp
@@ -59,7 +59,7 @@ tst_qmlplugindump::tst_qmlplugindump()
 
 void tst_qmlplugindump::initTestCase()
 {
-    qmlplugindumpPath = QLibraryInfo::location(QLibraryInfo::BinariesPath);
+    qmlplugindumpPath = QLatin1String("../../../../bin");
 
 #if defined(Q_OS_WIN)
     qmlplugindumpPath += QLatin1String("/qmlplugindump.exe");
Index: qtdeclarative-opensource-src-5.6.0-rc/tests/auto/qml/debugger/qqmldebugjs/tst_qqmldebugjs.cpp
===================================================================
--- qtdeclarative-opensource-src-5.6.0-rc.orig/tests/auto/qml/debugger/qqmldebugjs/qqmldebugjs/tst_qqmldebugjs.cpp
+++ qtdeclarative-opensource-src-5.6.0-rc/tests/auto/qml/debugger/qqmldebugjs/qqmldebugjs/tst_qqmldebugjs.cpp
@@ -829,7 +829,7 @@ void tst_QQmlDebugJS::cleanupTestCase()
 {
     connection = new QQmlDebugConnection();
     if (qmlscene)
-        process = new QQmlDebugProcess(QLibraryInfo::location(QLibraryInfo::BinariesPath) +
+        process = new QQmlDebugProcess(QLatin1String("../../../../../bin") +
                                        "/qmlscene", this);
     else
         process = new QQmlDebugProcess(QCoreApplication::applicationDirPath() +
Index: qtdeclarative-opensource-src-5.6.0-rc/tests/auto/qml/debugger/qqmlenginedebuginspectorintegrationtest/tst_qqmlenginedebuginspectorintegration.cpp
===================================================================
--- qtdeclarative-opensource-src-5.6.0-rc.orig/tests/auto/qml/debugger/qqmlenginedebuginspectorintegrationtest/tst_qqmlenginedebuginspectorintegration.cpp
+++ qtdeclarative-opensource-src-5.6.0-rc/tests/auto/qml/debugger/qqmlenginedebuginspectorintegrationtest/tst_qqmlenginedebuginspectorintegration.cpp
@@ -102,7 +102,7 @@ void tst_QQmlEngineDebugInspectorIntegra
             .arg(restrictServices ? QStringLiteral(",services:QmlDebugger,QmlInspector") :
                                     QString());
 
-    m_process = new QQmlDebugProcess(QLibraryInfo::location(QLibraryInfo::BinariesPath) + "/qml",
+    m_process = new QQmlDebugProcess(QLatin1String("../../../../../bin" + "/qml",
                                      this);
     m_process->start(QStringList() << argument << testFile("qtquick2.qml"));
     QVERIFY2(m_process->waitForSessionStart(),
Index: qtdeclarative-opensource-src-5.6.0-rc/tests/auto/qml/debugger/qqmlinspector/tst_qqmlinspector.cpp
===================================================================
--- qtdeclarative-opensource-src-5.6.0-rc.orig/tests/auto/qml/debugger/qqmlinspector/tst_qqmlinspector.cpp
+++ qtdeclarative-opensource-src-5.6.0-rc/tests/auto/qml/debugger/qqmlinspector/tst_qqmlinspector.cpp
@@ -84,7 +84,7 @@ void tst_QQmlInspector::startQmlscenePro
             .arg(STR_PORT_FROM).arg(STR_PORT_TO)
             .arg(restrictServices ? QStringLiteral(",services:QmlInspector") : QString());
 
-    m_process.reset(new QQmlDebugProcess(QLibraryInfo::location(QLibraryInfo::BinariesPath) +
+    m_process.reset(new QQmlDebugProcess(QLatin1String("../../../../../bin") +
                                          "/qml"));
     // Make sure the animation timing is exact
     m_process->addEnvironment(QLatin1String("QSG_RENDER_LOOP=basic"));
Index: qtdeclarative-opensource-src-5.6.0-rc/tests/auto/qml/debugger/qqmlprofilerservice/tst_qqmlprofilerservice.cpp
===================================================================
--- qtdeclarative-opensource-src-5.6.0-rc.orig/tests/auto/qml/debugger/qqmlprofilerservice/tst_qqmlprofilerservice.cpp
+++ qtdeclarative-opensource-src-5.6.0-rc/tests/auto/qml/debugger/qqmlprofilerservice/tst_qqmlprofilerservice.cpp
@@ -359,7 +359,7 @@ void QQmlProfilerClient::messageReceived
 void tst_QQmlProfilerService::connect(bool block, const QString &testFile, bool restrictServices)
 {
     // ### Still using qmlscene due to QTBUG-33377
-    const QString executable = QLibraryInfo::location(QLibraryInfo::BinariesPath) + "/qmlscene";
+    const QString executable = QLatin1String("../../../../../bin") + "/qmlscene";
     QStringList arguments;
     arguments << QString::fromLatin1("-qmljsdebugger=port:%1,%2%3%4")
                  .arg(STR_PORT_FROM).arg(STR_PORT_TO)
