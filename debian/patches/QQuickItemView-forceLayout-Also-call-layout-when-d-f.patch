From 201dec50b6f08b740aab9947725f8f5ec36349bb Mon Sep 17 00:00:00 2001
From: Albert Astals Cid <albert.astals@canonical.com>
Date: Mon, 7 Mar 2016 13:18:56 +0100
Subject: [PATCH] QQuickItemView::forceLayout: Also call layout when
 d->forceLayout

This way callers of forceLayout get a relayout if the dimension
of a delegate that affects the itemview content size has just changed
but the itemview content size has not been updated yet.

This is useful because sometimes in the QML side you want to do things when the
item view delegate size has changed but need the item view content size to be already updated.

Change-Id: I846984a841e8e14c84d7a700a7ff736196b60afb
Reviewed-by: Michael Brasser <michael.brasser@live.com>
Reviewed-by: Shawn Rutledge <shawn.rutledge@theqtcompany.com>
---
 src/quick/items/qquickitemview.cpp           |  3 ++-
 tests/auto/qmltest/listview/tst_listview.qml | 21 +++++++++++++++++++++
 2 files changed, 23 insertions(+), 1 deletion(-)

diff --git a/src/quick/items/qquickitemview.cpp b/src/quick/items/qquickitemview.cpp
index 188b347..aff03b7 100644
--- a/src/quick/items/qquickitemview.cpp
+++ b/src/quick/items/qquickitemview.cpp
@@ -1052,7 +1052,8 @@ QQuickItem *QQuickItemView::itemAt(qreal x, qreal y) const
 void QQuickItemView::forceLayout()
 {
     Q_D(QQuickItemView);
-    d->applyPendingChanges();
+    if (isComponentComplete() && (d->currentChanges.hasPendingChanges() || d->forceLayout))
+        d->layout();
 }
 
 void QQuickItemViewPrivate::applyPendingChanges()
diff --git a/tests/auto/qmltest/listview/tst_listview.qml b/tests/auto/qmltest/listview/tst_listview.qml
index 988d30f..75429c4 100644
--- a/tests/auto/qmltest/listview/tst_listview.qml
+++ b/tests/auto/qmltest/listview/tst_listview.qml
@@ -51,6 +51,22 @@ Item {
     }
 
     ListView {
+        id: singleElementList
+        height: 20
+        width: 50
+        model: 1
+        property real heightForDelegate: 100
+        property real contentHeightOnDelegateResize
+        delegate: Rectangle {
+            height: singleElementList.heightForDelegate
+            onHeightChanged: {
+                singleElementList.forceLayout();
+                singleElementList.contentHeightOnDelegateResize = singleElementList.contentHeight;
+            }
+        }
+    }
+
+    ListView {
         id: viewmanyitems
         model: manyitems
         delegate: Text { text: model.name }
@@ -313,5 +329,10 @@ Item {
             compare(listInteractiveCurrentIndexEnforce.currentIndex, 1);
             tryCompare(listInteractiveCurrentIndexEnforce, "contentX", listInteractiveCurrentIndexEnforce.width);
         }
+
+        function test_forceLayoutForContentHeight() {
+            singleElementList.heightForDelegate = 200;
+            compare(singleElementList.contentHeightOnDelegateResize, 200);
+        }
     }
 }
-- 
2.7.0

